[
["verosimilitud.html", "Chapter 16 Verosimilitud 16.1 Función de verosimilitud 16.2 Función de log-verosimilitud 16.3 Método de máxima verosimilitud para estimar parámetros 16.4 Método de máxima verosimilitud para estimar parámetros en modelos de regresión EJERCICIOS", " Chapter 16 Verosimilitud En este capítulo se mostrará como usar para obtener la función de log-verosimilitud y estimadores por el método de máxima verosimilitud. 16.1 Función de verosimilitud La función de verosimilitud para un vector de parámetros \\(\\boldsymbol{\\Theta}\\) dada una muestra aleatoria \\(\\boldsymbol{x}\\) con una distribución asumida se define como: \\[\\begin{equation} L(\\boldsymbol{\\Theta} | \\boldsymbol{x}) = \\prod_{i=1}^{n} f(x_i | \\boldsymbol{\\Theta}), \\tag{16.1} \\end{equation}\\] donde \\(x_i\\) representa uno de los elementos de la muestra aleatoria y \\(f\\) es la función de masa/densidad de la distribución de la cual se obtuvo \\(\\boldsymbol{x}\\). 16.2 Función de log-verosimilitud La función de log-verosimilitud \\(l\\) se define como el logaritmo de la función de verosimilitud \\(L\\), es decir \\[\\begin{equation} l(\\boldsymbol{\\Theta} | \\boldsymbol{x}) = \\log L(\\boldsymbol{\\Theta} | \\boldsymbol{x}) = \\sum_{i=1}^{n} \\log f(x_i | \\boldsymbol{\\Theta}) \\tag{16.2} \\end{equation}\\] 16.3 Método de máxima verosimilitud para estimar parámetros El método de máxima verosimilitud se usa para estimar los parámetros de una distribución. El objetivo de este método es encontrar los valores de \\(\\boldsymbol{\\Theta}\\) que maximizan \\(L\\) o \\(l\\) y valores encontrados se representan por \\(\\hat{\\boldsymbol{\\Theta}}\\). Ejemplo Suponga que se tiene el vector rta que corresponde a una muestra aleatoria de una distribución binomial con parámetro size=5 conocido. rta &lt;- c(2, 2, 1, 1, 1, 1, 0, 2, 1, 2, 1, 0, 1, 2, 1, 0, 0, 2, 2, 1) Calcular el valor de log-verosimilitud \\(l\\) si asumimos que \\(p=0.30\\) en la distribución binomial. Para obtener el valor de \\(l\\) en el punto \\(p=0.30\\) se aplica la definición dada en la expresión (16.2). Como el problema trata de una binomial se usa entonces la función de masa dbinom evaluada en la muestra rta, el parámetro size como es conocido se reemplaza por el valor de cinco y en el parámetro prob se cambia por 0.3. Como interesa la función de log-verosimilitud se debe incluir log=TRUE. A continuación el código necesario. sum(dbinom(x=rta, size=5, prob=0.3, log=TRUE)) ## [1] -24.55231 Por lo tanto \\(l(\\theta)= -24.55\\) Construir una función llamada ll a la cual le ingrese uno o varios valores del parámetro \\(p\\) de la binomial, la función debe entregar el valor de log-verosimilitud en cada uno de los \\(p\\) ingresados. La función solicitada tiene un cuerpo igual al usado en el numeral anterior. Para asegurar que la función construída pueda recibir un vector de valores de \\(p\\) se vectoriza la función con Vectorize, abajo el código usado. ll &lt;- function(prob) sum(dbinom(x=rta, size=5, prob=prob, log=T)) ll &lt;- Vectorize(ll) # Para vectorizar la función Vamos a probar la función en \\(p=0.15\\) y \\(p=0.80\\) para saber si la función ll está vectorizada. ll(prob=0.15) # Individual para p=0.15 ## [1] -25.54468 ll(prob=0.80) # Individual para p=0.80 ## [1] -98.45598 ll(prob=c(0.15, 0.80)) # Evaluada en un vector ## [1] -25.54468 -98.45598 La mayoría de las funciones en creadas por los usuarios quedan vectorizadas otras no. La función ll no estaba vectorizada y por esa razón se necesitó usa Vectorize. No abuse de la función Vectorize, sólo úsela cuando sea necesario. Dibujar la curva log-verosimilitud \\(l\\). En la Figura 16.1 se presenta la curva solicitada, para su construcción se usa el siguiente código. curve(ll, lwd=4, col=&#39;dodgerblue3&#39;, xlab=&#39;Probabilidad de éxito&#39;, ylab=expression(paste(&quot;l(&quot;, theta, &quot;)&quot;))) FIGURE 16.1: Función de log-verosimilitud para el ejemplo sobre binomial. Observando la Figura 16.1, ¿cuál esl el valor de \\(p\\) que maximiza la función de log-verosimilitud? Al observar la Figura 16.1 se nota que el valor de \\(p\\) que maximiza la función log-verosimilitud está muy cerca de 0.2. ¿Cuál es el valor exacto de \\(p\\) que maximiza la función log-verosimilitud? En existe la función optimize que sirve para encontrar el valor que minimiza una función uniparamétrica en un intervalo dado, sin embargo, aquí interesa es maximimizar la función de log-verosimilitud, por esa razón se construye la función minusll que es el negativo de la función ll para así poder usar optimize. A continuación el código usado. minusll &lt;- function(x) -ll(x) optimize(f=minusll, interval=c(0, 1)) ## $minimum ## [1] 0.229993 ## ## $objective ## [1] 23.3246 Del resultado anterior se observa que cuando \\(p=0.23\\) el valor máximo de log-verosimilitud es 23.32. Ejemplo Suponga que la estatura de una población se puede asumir como una normal \\(N(170, 25)\\). Suponga también que se genera una muestra aleatoria de 50 observaciones de la población con el objetivo de recuperar los valores de la media y varianza poblacionales a partir de la muestra aleatoria. La muestra se va a generar con la función rnorm pero antes se fijará una semilla con la intención de que el lector pueda replicar el ejemplo y obtener la misma muestra aleatoria aquí generada, el código para hacerlo es el siguiente. set.seed(1235) # La semilla es 1235 y &lt;- rnorm(n=50, mean=170, sd=5) construya la función de log-verosimilitud para los parámetros de la normal dada la muestra aleatoria y. ll &lt;- function(param) { media &lt;- param[1] # param es el vector de parámetros desvi &lt;- param[2] sum(dnorm(x=y, mean=media, sd=desvi, log=TRUE)) } Siempre que el interés sea encontrar los valores que maximizan una función de log-verosimilitud, los parámetros de la distribución deben ingresar a la función ll como un vector. Esto se debe hacer para poder usar las funciones de búsqueda optim y nlminb. Dibuje la función de log-verosimilitud. En la Figura 16.2 se muestra el gráfico de niveles para la superficie de log-verosimilitud. De esta figura se nota claramente que los valores que maximizan la superficie están alrededor de \\(\\mu=170\\) y \\(\\sigma=5\\). Para ver el código usado en la creación de la Figura 16.2 se recomienda consultar la sección sobre contour en Hernández (2018). FIGURE 16.2: Gráfico de niveles para la función de log-verosimilitud para el ejemplo sobre normal. Obtenga los valores de \\(\\mu\\) y \\(\\sigma\\) que maximizan la función de log-verosimilitud. Para obtener los valores solicitados vamos a usar la función nlminb que es un optimizador. A la función nlminb se le debe indicar por medio del parámetro objective la función que queremos optimizar (minimizar); el parámetro start es un vector con los valores iniciales para comenzar la búsqueda de \\(\\mu\\) y \\(\\sigma\\); los parámetros lower y upper sirven para delimitar el espacio de búsqueda. A continuación se muestra el código usado para obtener los valores que minimizan a minusll, es decir, los valores que maximizan la función de log-verosimilitud. minusll &lt;- function(x) -ll(x) nlminb(objective=minusll, start=c(163, 3.4), lower=c(160, 3), upper=c(180, 7)) ## $par ## [1] 170.338374 5.423529 ## ## $objective ## [1] 155.4842 ## ## $convergence ## [1] 0 ## ## $iterations ## [1] 13 ## ## $evaluations ## function gradient ## 16 35 ## ## $message ## [1] &quot;relative convergence (4)&quot; De la salida anterior podemos observar que los valores óptimos de \\(\\mu\\) y \\(\\sigma\\) son 170.338 y 5.424 respectivamente, esto coincide con lo observado en la 16.2 y con los valores reales de simulación de la muestra. Esto indica que el procedimiento de estimación de parámetros por máxima verosimilitud entrega valores insesgados de los parámetros a estimar. Un resultado interesante de la salida anterior es que se reporta el valor mínimo que alcanza la función minusll, este valor fue de 155.5, por lo tanto, se puede afirmar que el valor máximo de log-verosimilitud es -155.5. Otros resultados importantes de la salida anterior son el valor de convergence=0 que indica que la búsqueda fue exitosa; iterations=13 indica que se realizaron 13 pasos desde el punto inicial start hasta las coordenadas de optimización. En se tienen dos funciones básicas para optimizar funciones, es decir, para encontrar los valores que minimizan una función dada. Esas dos funciones son nliminb y optim. Para optimizar en una sola dimensión se usa la función optimize. ¿Hay alguna función para obtener directamente el valor que maximiza la función log-verosimilitud? La respuesta es si. Si la distribución estudiada es una de las distribuciones básicas se puede usar la función fitdistr del paquete básico MASS. La función fitdistr requiere de los datos que se ingresan por medio del parámetro x, y de la distribución de los datos que se ingrea por medio del parámetro densfun. La función fitdistr admite 15 distribuciones diferentes para hacer la búsqueda de los parámetros que caracterizan una distribución, se sugiere consultar la ayuda de la función fitdistr escribiendo en la consola help(fitdistr). A continuación el código usado. require(MASS) # El paquete ya está instalado, solo se debe cargar res &lt;- fitdistr(x=y, densfun=&#39;normal&#39;) res ## mean sd ## 170.3383794 5.4235271 ## ( 0.7670026) ( 0.5423527) El objeto res contiene los resultados de usar fitdistr. En la primer línea están los valores de los parámetros que maximizan la función de log-verosimilitud, en la parte de abajo, dentro de paréntesis, están los errores estándar o desviaciones de éstos estimadores. Al objeto res es de la clase fitdistr y por lo tanto se le puede aplicar la función genérica logLik para obtener el valor de la log-verosimilitud. Se sugiere consultar la ayuda de la función logLik escribiendo en la consola help(logLik). A continuación el código para usar logLik sobre el objeto res. logLik(res) ## &#39;log Lik.&#39; -155.4842 (df=2) De esta última salida se observa que el valor coincide con el obtenido cuando se usó nlminb. Ejemplo Generar \\(n=100\\) observaciones de una gamma con parámetro de forma igual a 2 y parámetro de tasa igual a 0.5 y luego responder las preguntas. Para generar la muestra aleatoria ma solicitada se fijó la semilla con el objetivo de que el lector pueda obtener los mismos resultados de este ejemplo. n &lt;- 100 set.seed(12345) ma &lt;- rgamma(n=n, shape=2, rate=0.5) Asumiendo que la muestra aleatoria proviene de una normal (lo cual es incorrecto) estime los parámetros de la distribución fit1 &lt;- fitdistr(x=ma, densfun=&#39;normal&#39;) fit1 ## mean sd ## 4.3082767 2.8084910 ## (0.2808491) (0.1985903) Asumiendo que la muestra aleatoria proviene de una gamma estime los parámetros de la distribución. fit2 &lt;- fitdistr(x=ma, densfun=&#39;gamma&#39;) fit2 ## shape rate ## 2.23978235 0.51987909 ## (0.29620136) (0.07702892) En la salida anterior están los valores estimados de los parámetros de la distribución por el método de máxima verosimilitud, observe la cercanía de éstos con los verdaderos valores de 2 y 0.5 para forma y tasa respectivamente. Dibuje dos qqplot, uno asumiendo distribución gamma y el otro distribución gamma. ¿Cuál distribución se ajusta mejor a los datos simulados? Para dibujar el qqplot se usa la función genérica qqplot, recomendamos consultar Hernández (2018) para los detalles de cómo usar esta función. Al usar qqplot para obtener el qqplot normal y gamma es necesario indicar los valores \\(\\hat{\\boldsymbol{\\Theta}}\\) obtenidos en el numeral anterior, por eso es que en el código mostrado a continuación aparece mean=4.3083, sd=2.8085 en el qqplot normal y shape=2.23978, rate=0.51988 en el qqplot gamma. par(mfrow=c(1, 2)) qqplot(y=ma, pch=19, x=qnorm(ppoints(n), mean=4.3083, sd=2.8085), main=&#39;Normal Q-Q Plot&#39;, xlab=&#39;Theoretical Quantiles&#39;, ylab=&#39;Sample Quantiles&#39;) qqplot(y=ma, pch=19, x=qgamma(ppoints(n), shape=2.23978, rate=0.51988), main=&#39;Gamma Q-Q Plot&#39;, xlab=&#39;Theoretical Quantiles&#39;, ylab=&#39;Sample Quantiles&#39;) FIGURE 16.3: Gráfico cuantil cuantil normal y gamma para la muestra simulada. En la Figura 16.3 se muestran los qqplot solicitados. Se observa claramente que al asumir normalidad (lo cual es incorrecto), los puntos del qqplot no están alineados, mientras que al asumir distribución gamma (lo cual es correcto), los puntos si están alineados. De esta figura se concluye que la muestra ma puede provenir de una \\(Gamma(2.23978, 0.51988)\\). Para obtener el gráfico cuantil cuantil bajo normalidad se puede usar directamente la función qqnorm, consultar Hernández (2018) para mayores detalles. En este ejemplo se eligió la mejor distribución entre dos candidatas usando una herramienta gráfica, lo que se recomienda usar algún método menos subjetivo (cuantitativo) para tomar decisiones. Para comparar modelos se puede utilizar el Akaike information criterion (\\(AIC\\)) propuesto por Akaike (1974) que sirve para medir la calidad relativa de los modelos estadísticos, la expresión para calcular el indicador es \\(AIC=-2 \\, \\hat{l}+2 \\, df\\), donde \\(\\hat{l}\\) corresponde al valor de \\(\\log\\)-verosimilitud y \\(df\\) corresponde al número de parámetros estimados del modelo. Siempre el modelo elegido es aquel modelo con el menor valor de \\(AIC\\). Calcular el \\(AIC\\) para los modelos asumidos normal y gamma. -2 * logLik(fit1) + 2 * 2 # AIC para modelo normal ## &#39;log Lik.&#39; 494.3172 (df=2) -2 * logLik(fit2) + 2 * 2 # AIC para modelo gamma ## &#39;log Lik.&#39; 466.0479 (df=2) De los resultados anteriores se concluye que entre los dos modelos, el mejor es el gamma porque su \\(AIC=466\\) es el menor de toos los \\(AIC\\). Modelos anidados pueden ser comparados por medio del global deviance (\\(GD\\)) dado por \\(GD=-2 \\, \\hat{l}\\) y modelos no anidados por medio del Generalized Akaike information criterion (\\(GAIC\\)) propuesto por Akaike (1983) y dado por \\(GAIC=-2 \\, \\hat{l} + \\# \\, df\\) siendo \\(\\#\\) el valor de penalidad por cada parámetro adicional en el modelo; cuando \\(\\# = 2\\), el \\(GAIC\\) coincide con el \\(AIC\\) y el Schwarz Bayesian criterion (\\(SBC\\)) propuesto por Schwarz (1978) se dá cuando el valor de penalidad es \\(\\# = \\log(n)\\) donde \\(n\\) es el número de observaciones del modelo; siempre el modelo elegido es aquel modelo con el menor valor de cualquiera de los criterios de información anteriores. Ejemplo ¿Será posible explorar entre muchas distribuciones estadísticas aquella que mejor explica una variable de interés? La respuesta es si, se puede usar la función fitDist del paquete gamlss . Esta función tiene la siguiente estructura: fitDist(y, k = 2, type = c(&quot;realAll&quot;, &quot;realline&quot;, &quot;realplus&quot;, &quot;real0to1&quot;, &quot;counts&quot;, &quot;binom&quot;)) El parámetro y sirve para ingresar el vector con la información; k=2 es la penalización por cada parámetro estimado para calcular el \\(GAIC\\), por defecto es 2; y el parámetro type sirve para indicar el tipo de distribución, los posibles valores son: realAll: para hacer la búsqueda en todas las distribuciones disponibles en gamlss. realline: para variables en \\(\\Re\\). realplus: para variables en \\(\\Re^+\\). real0to1: para variables en el intervalo \\((0, 1)\\). counts: para variables de conteo. binom: para variables de tipo binomial. Usar la función fitDist para elegir la distribución que mejor se ajusta a los datos simulados en el ejemplo anterior, usar una penalizacion de \\(k=2\\) para calcular el \\(AIC\\). Se usa la función fitDist con type='realplus' porque se sabe que la muestra aleatoria tiene valores sólo en \\(\\Re^+\\), los resultados de almacenan en el objeto modelos. Para obtener la lista de los mejores modelos con su respectivo \\(BAIC\\) se escribe en la consola modelos$fits. Abajo el código usado. require(gamlss) modelos &lt;- fitDist(y=ma, type=&#39;realplus&#39;, k=2) modelos$fits ## GA WEI3 GG GIG BCCGo BCPEo BCTo exGAUS ## 466.0479 466.7706 467.9592 468.0346 468.3529 469.4485 470.3529 471.2275 ## LOGNO IG EXP PARETO2 IGAMMA ## 474.5855 483.9227 494.1076 496.1078 504.1710 De la lista anterior se observa que la función gamma está en el primer lugar con un \\(BAIC=466\\), valor que coincide con el \\(AIC\\) obtenido en el ejercicio anterior. Esto significa que como la gamma tiene el menor \\(BAIC\\), es la distribución que mejor se ajusta a los datos de la muestra, esto coincide con la realidad, ya que la muestra fue generada de una distribución gamma. ¿Por queé \\(AIC\\) y \\(BAIC\\) coinciden en este ejemplo? ¿Cuáles son los valores estimados de los parámetros para la distribución gamma identificada en el paso anterior? En gamlss los parámetros de las distribuciones se nombran de una forma especial, el parámetro de posición se denomina \\(\\mu\\), el de dispersión se denomina \\(\\sigma\\) y los de simetría y curtosis con \\(\\nu\\) y \\(\\tau\\). La distribución gamma sólo tiene 2 parámetros y para obtener sus valores estimados se usa el siguiente código. modelos$mu ## [1] 4.30828 modelos$sigma ## [1] 0.668186 Si comparamos los anteriores resultados, \\(\\hat{\\mu}= 4.308\\) y \\(\\hat{\\sigma}=0.6682\\), con los encontrados al usar la función fitdist, \\(\\widehat{shape}=2.23978\\) y \\(\\widehat{rate}=0.51988\\), vemos que no coinciden, esto se debe a que la parametrización de la gamma usada por gamlss es diferente a la parametrización usada por la base de . Lo anterior no es motivo de preocupación, lo que se recomienda es que el usuario elija una de las parametrizaciones y trabaje con ella, no debe mezclarlas. Dibujar el histograma para la muestra aleatoria y agregar la densidad de la distribución gamma identificada como la distribución que mejor explica el comportamiento de la variable. Para hacer lo solicitado se usa la función histDist del paquete gamlss, sólo es necesario ingresar los datos y la familia o distribución de la densidad requerida. Abajo el código usado. histDist(y=ma, family=GA, main=&#39;&#39;, xlab=&#39;x&#39;, ylab=&#39;Densidad&#39;, line.col=&#39;blue&#39;, line.wd=4) FIGURE 16.4: Histograma para la muestra simulada con la densidad de una Gamma(mu=4.308, sigma=0.6682). ## ## Family: c(&quot;GA&quot;, &quot;Gamma&quot;) ## Fitting method: &quot;nlminb&quot; ## ## Call: gamlssML(formula = ma, family = &quot;GA&quot;, data = sys.parent()) ## ## Mu Coefficients: ## [1] 1.461 ## Sigma Coefficients: ## [1] -0.4032 ## ## Degrees of Freedom for the fit: 2 Residual Deg. of Freedom 98 ## Global Deviance: 462.048 ## AIC: 466.048 ## SBC: 471.258 En la Figura 16.4 se presenta el histograma para muestra aleatoria y la densidad de la gamma que mejor explica estos datos. Se observa claramente que la curva de densidad azul acompaña el patrón de los datos. 16.4 Método de máxima verosimilitud para estimar parámetros en modelos de regresión En la sección anterior se estudió cómo estimar los parámetros de una distribución, en este capítulo se aprenderá a estimar los parámetros de un modelo de regresión general. Ejemplo Considere el siguiente modelo de regresión: \\[\\begin{align*} y_i &amp;\\sim N(\\mu_i, \\sigma^2), \\\\ \\mu_i &amp;= -2 + 3 x_1, \\\\ \\sigma &amp;= 5, \\\\ x_1 &amp;\\sim U(-5, 6). \\end{align*}\\] EJERCICIOS Al inicio del Capítulo ?? se presentó la base de datos sobre medidas del cuerpo, consulte la explicación sobre la base de datos y responda lo siguiente. Si se asume que la edad tiene distribución normal, ¿cuáles son los estimadores de máxima verosimilitud para \\(\\mu\\) y \\(\\sigma\\)? Como el histograma para la edad muestra un sesgo a la derecha se podría pensar que la distribución gamma sería una buena candidata para explicar las edades observadas. Asumiendo una distribución gamma, ¿cuáles son los estimadores de máxima verosimilitud para los parámetros? ¿Cuál de los dos modelos es más apropiado para explicar la variable de interés? Calcule el \\(AIC\\) para decidir. En la sección ?? se presentó la base de datos sobre cangrejos hembra, consulte la explicación sobre la base de datos y responda lo siguiente. Suponga que el número de satélites sobre cada hembra es una variable que se distribuye Poisson. Construya en la función de log-verosimilitud \\(l\\), dibuje la función \\(l\\) y encuentre el estimador de máxima verosimilitud de \\(\\lambda\\). Repita el ejercicio anterior asumiendo que el número de satélites se distribuye binomial negativo. ¿Cuál de los dos modelos es más apropiado para explicar la variable de interés? Calcule el \\(AIC\\) para decidir. Al inicio del Capítulo ?? se presentó la base de datos sobre apartamentos usados en Medellín, consulte la explicación sobre la base de datos y responda lo siguiente. Dibuje una densidad para la variable área del apartamento. Describa lo encontrado en esa densidad. ¿Qué distribuciones de 2 parámetros podrían explicar el comportamiento del área de los apartamentos? Mencione al menos 3. Para cada una de las distribuciones anteriores dibuje un gráfico de contornos o calor para la función de log-verosimilitud y estime los parámetros de la distribución elegida. ¿Cuál de los dos modelos es más apropiado para explicar la variable de interés? Calcule el \\(AIC\\) para decidir. Curiosidades "]
]
